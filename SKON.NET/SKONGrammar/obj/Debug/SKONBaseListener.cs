//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\juliu\Documents\GitHub\SKON.NET\SKON.NET\SKONGrammar\SKON.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SKON.NET {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISKONListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class SKONBaseListener : ISKONListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SKONParser.skon"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSkon([NotNull] SKONParser.SkonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SKONParser.skon"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSkon([NotNull] SKONParser.SkonContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SKONParser.open_map"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpen_map([NotNull] SKONParser.Open_mapContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SKONParser.open_map"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpen_map([NotNull] SKONParser.Open_mapContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SKONParser.map"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMap([NotNull] SKONParser.MapContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SKONParser.map"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMap([NotNull] SKONParser.MapContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SKONParser.pair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPair([NotNull] SKONParser.PairContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SKONParser.pair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPair([NotNull] SKONParser.PairContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SKONParser.open_array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpen_array([NotNull] SKONParser.Open_arrayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SKONParser.open_array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpen_array([NotNull] SKONParser.Open_arrayContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SKONParser.array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArray([NotNull] SKONParser.ArrayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SKONParser.array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArray([NotNull] SKONParser.ArrayContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SKONParser.simple_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_value([NotNull] SKONParser.Simple_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SKONParser.simple_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_value([NotNull] SKONParser.Simple_valueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SKONParser.complex_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComplex_value([NotNull] SKONParser.Complex_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SKONParser.complex_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComplex_value([NotNull] SKONParser.Complex_valueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SKONParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue([NotNull] SKONParser.ValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SKONParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue([NotNull] SKONParser.ValueContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace SKON.NET
